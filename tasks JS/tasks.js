//Задача #1 

/*Создать функцию createSecretHolder(secret) которая принимает любое значение и возвращает объект ТОЛЬКО с двумя методами:
getSecret() - возвращает секрет
setSecret() - задает секрет */

//Решение
function createSecretHolder(secret) {
    let _secret = secret;

    return {
      getSecret() { return _secret},
      setSecret(newSecret) { newSecret ? _secret = newSecret : ''},
    }
}
obj = createSecretHolder(5)



//Задача #2 - Отсортировать массив 32-битных целых чисел в порядке возрастания количество бит в этих числах.

//Решение
let nub =  [12,10,7,6,15,8];

// Для того, чтобы изменился исходный массив используем метод sort
nub.sort(function bitSort(a,b) {
  //Считаем количество бит в числе: переводим число в двоичную систему, преобразовываем в массив по элементам, сортируем, скрепляем в строку и превращаем в число.
  //В созданном числе отбрасываются нули и мы получаем только единицы. Преобразовываем число в строку и считаем длину строки
  let aBit = Number(a.toString(2).split("").sort().join("")).toString().length;
  let bBit = Number(b.toString(2).split("").sort().join("")).toString().length;

  //Сначала сравниваем числа, полученные через битовое преобразование
  if (aBit > bBit) { return 1} 
  else if (aBit < bBit) { return-1} 
  else {
      //Если эти числа равны (т.е. равно количество бит), то сравниваем исходные числа 
      if(a> b){return 1;} 
      else if (a < b) {return -1} 
      else {return 0;}
  } 
})

//Задача #3 - Необходимо вернуть массив языков где оценки =>60, отсортированный в убывающем порядке по оценкам.

//Решение 

let obj = {"Hindi": 60, "Dutch" : 93, "Greek": 71}; 

// шаг #1 - Превращаем ключи объекта в массив
// шаг #2 - Делаем фильтр массива по условию. Условие - вывести в массив только те ключи, свойства в объекте которых =>60
// шаг #3 - Получаем массив с ключами, свойств которых =>60. Этот массив сортируем по свойствам ключей объекта по убыванию
const result = Object.keys(obj).filter((key) => { return obj[key] >= 60 }).sort(function(a,b) {return obj[b] - obj[a]})



//Задача #4 - Необходимо изменить функцию так чтобы она возвращала все значения i (0,1,2,3,4). Нельзя использовать const и let для объявления переменных.

/*Код выводил пятёрки, т.к. переменная i не замкнута. И к тому времени, как у нас проходила 1 секунда, переменная i принимала значение 5, 
это значение и попадало в вывод */
/*Для решения можно было задать let вместо var. Но по условию это запрещени. Тогда нужно замкнуть переменную i другим способом */
/* Решение: Создать функцию, которая будет принимать переменную i, замыкать ее, и после чего будет проводить манипуляции с setTimeout.*/

for (var i = 0; i < 5; i++) {
    function closure(i) {
      setTimeout(() => {console.log(i);}, 1000);
    }
    closure(i);
}
